{"version":3,"sources":["components/SideMenu/SideMenu.module.scss","App.module.scss","docs lazy /^/.//.*$/ groupOptions: {} namespace object","components/SideMenu/SideMenu.tsx","pages/Test/Test.tsx","pages/WelcomePage/WelcomePage.tsx","App.tsx","serviceWorker.ts","index.tsx","pages/Test/Test.module.scss"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","SideMenu","location","useLocation","className","styles","wrapper","logo","storybook","group","title","links","link","classNames","pathname","path","selectedLink","to","renderers","image","props","imageWrapper","alt","src","imageDescription","Test","page","useState","text","setText","doc","fetch","default","res","resText","plugins","gfm","WelcomePage","App","basename","process","sideMenu","content","grid","xsOffset","xs","smOffset","sm","mdOffset","md","lgOffset","lg","exact","empty","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c70eaa1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SideMenu_wrapper__2sxX2\",\"logo\":\"SideMenu_logo__3qZ-9\",\"group\":\"SideMenu_group__1KTpD\",\"title\":\"SideMenu_title__1dCZE\",\"link\":\"SideMenu_link__3rgfC\",\"selectedLink\":\"SideMenu_selectedLink__MwmPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1AVsN\",\"empty\":\"App_empty__2i6_B\",\"sideMenu\":\"App_sideMenu__2DTSq\",\"content\":\"App_content__1Wt3K\"};","var map = {\n\t\"./doc.md\": [\n\t\t178,\n\t\t7,\n\t\t4\n\t],\n\t\"./energy.md\": [\n\t\t179,\n\t\t7,\n\t\t5\n\t],\n\t\"./resistance.md\": [\n\t\t180,\n\t\t7,\n\t\t6\n\t],\n\t\"./storybook\": [\n\t\t16,\n\t\t3\n\t],\n\t\"./storybook.json\": [\n\t\t16,\n\t\t3\n\t],\n\t\"./tsconfig\": [\n\t\t65,\n\t\t3,\n\t\t0\n\t],\n\t\"./tsconfig.json\": [\n\t\t65,\n\t\t3,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 176;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useLocation } from \"react-router-dom\";\nimport styles from './SideMenu.module.scss';\nimport storybook from '../../docs/storybook.json';\n\nconst SideMenu = () => {\n\n  const location = useLocation();\n\n  return(\n    <div className={styles.wrapper}>\n      <div className={styles.logo}>\n        Genshin Docs\n      </div>\n      {\n        storybook.map(group =>\n          <ul className={styles.group}>\n            <div className={styles.title}>{ group.title }</div>\n            {\n              group.links.map(link =>\n                <li className={classNames(styles.link, location.pathname === link.path && styles.selectedLink)}>\n                  <Link to={link.path}>{ link.title }</Link>\n                </li>\n              )\n            }\n          </ul>\n        )\n      }\n    </div>\n  )\n};\n\nexport default SideMenu;","import React, {useState} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styles from './Test.module.scss';\nimport doc from '../../docs/doc.md';\nimport gfm from 'remark-gfm';\n\nconst base = process.env.PUBLIC_URL === '/genshin_docs';\n\nconst renderers = {\n  image: (props: any) => {\n    return(\n      <div className={styles.imageWrapper}>\n        <img alt='Where is description?' src={props.src} />\n        <div className={styles.imageDescription}>{ props.alt }</div>\n      </div>\n    );\n  }\n};\n\ninterface Props{\n  page: any;\n}\n\nconst Test = ({ page } : Props) => {\n  const [text, setText] = useState('');\n\n  import('../../docs/' + page.doc).then(module =>\n    fetch(module.default).then(res => res.text()).then(resText => setText(resText))\n  );\n\n  return(\n    <div className={styles.wrapper}>\n      <ReactMarkdown renderers={renderers} plugins={[gfm]}>{ text }</ReactMarkdown>\n    </div>\n  )\n};\n\nexport default Test;","import React from 'react';\nimport styles from './WelcomePage.module.scss';\n\nconst WelcomePage = () => {\n\n  return(\n    <div>\n      Hi welcome\n    </div>\n  )\n};\n\nexport default WelcomePage;","import React from 'react';\nimport { Row, Col } from 'react-flexbox-grid';\nimport SideMenu from \"./components/SideMenu/SideMenu\";\nimport styles from './App.module.scss';\nimport storybook from \"./docs/storybook.json\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Test from \"./pages/Test/Test\";\nimport WelcomePage from \"./pages/WelcomePage/WelcomePage\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div className={styles.page}>\n      <div className={styles.sideMenu}>\n        <SideMenu />\n      </div>\n      <div className={styles.content}>\n\n        <Row className={styles.grid}>\n          <Col xsOffset={0} xs={12} smOffset={1} sm={9} mdOffset={2} md={8} lgOffset={2} lg={6}>\n\n              {\n                storybook.map(group =>\n                  group.links.map(page =>\n                    <Route path={page.path}>\n                      <Test page={page} />\n                    </Route>\n                  )\n                )\n              }\n              <Route exact path='/'>\n                <WelcomePage />\n              </Route>\n\n          </Col>\n          <Col xs={0} sm={2} md={4} lg={4}  className={styles.empty}/>\n        </Row>\n      </div>\n    </div>\n  </Router>\n);\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Test_wrapper__2Duqr\",\"imageWrapper\":\"Test_imageWrapper__2FuA-\",\"imageDescription\":\"Test_imageDescription__lDFk5\"};"],"sourceRoot":""}